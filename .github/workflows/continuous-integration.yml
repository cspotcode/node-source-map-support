name: Continuous Integration
on:
  # branches pushed by collaborators
  push:
    branches:
      - master
  # pull request from non-collaborators
  pull_request: {}
  # nightly
  schedule:
    - cron:  '0 0 * * *'
jobs:
  build:
    name: "Test: ${{ matrix.os }}, node ${{ matrix.node }}"
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]
        node:
          - 16
          - 14
          - 12
          - 10
          - 9
          - '8'
          - '7'
          - '6'
          - '4'
          - '0.12'
          - '0.10'
    steps:
      # checkout code
      - uses: actions/checkout@v2
      # install node
      - name: Use Node.js ${{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # npm install with caching
      - run: |
          npm config set cache "$( node -p "process.cwd()" )/temp/npm-cache"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: temp/npm-cache
          key: npm-cache-${{ matrix.os }} ${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
          # restore-keys: npm-cache-${{ matrix.os }} ${{ matrix.node }}-
      - run: npm install

      # # install version to test against
      # - name: Use Node.js ${{ matrix.node }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node }}

      # Run tests
      - run: npm test

  # test:
  #   needs: build
  #   name: "Test: ${{ matrix.os }}, node ${{ matrix.node }}"
  #   runs-on: ${{ matrix.os }}-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu, windows]
  #       node:
  #         - 16
  #         - 14
  #         - 12
  #         - 10
  #         - 9
  #         - '8'
  #         - '7'
  #         - '6'
  #         - '4'
  #         - '0.12'
  #         - '0.10'
  #   steps:
  #     # checkout code
  #     - uses: actions/checkout@v2
  #     # install node
  #     - name: Use Node.js ${{ matrix.node }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node }}
  #     # lint, build, test
  #       # Downgrade from npm 7 to 6 because 7 still seems buggy to me
  #     - if: ${{ matrix.downgradeNpm }}
  #       run: npm install -g npm@6
  #     - run: |
  #         npm config set cache "$( node -p "process.cwd()" )/temp/npm-cache"
  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: temp/npm-cache
  #         key: npm-cache-${{ matrix.os }}-${{ hashFiles('package-lock.json') }}
  #         restore-keys: npm-cache-${{matrix.os }}-
  #     - run: npm ci --ignore-scripts
  #     - name: Upload npm logs
  #       if: ${{ failure() }}
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: npm-logs
  #         path: temp/npm-cache/_logs
  #     - run: npm run build-tsc
  #     - name: Download package artifact
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: ts-node-packed.tgz
  #         path: tests/
  #     - run: npm install typescript@${{ matrix.typescript }} --force
  #     - run: npm run test-cov
  #     - name: Upload npm logs
  #       if: ${{ failure() }}
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: npm-logs-${{ matrix.os }}-node-${{ matrix.nodeFlag }}-typescript-${{ matrix.typescriptFlag }}
  #         path: temp/npm-cache/_logs
  #     - run: npm run coverage-report
  #       if: ${{ always() }}
  #     - name: Codecov
  #       if: ${{ always() }}
  #       uses: codecov/codecov-action@v1
  #       with:
  #         flags: ${{ matrix.os }},node_${{ matrix.nodeFlag }},typescript_${{ matrix.typescriptFlag }}
